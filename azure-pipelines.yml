# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  name: Qinxiu-Local

stages:
- stage: Pre_Commit
  displayName: Pre Commit
  pool: Azure Pipelines
  jobs:
  - job: Unit_test
    displayName:  Unit_test
    steps:
      - task: Maven@3
        displayName: 'Maven test execution'
        inputs:
          mavenPomFile: 'pom.xml'
          goals: test

  - job: Linter_Check
    displayName:  Linter_Check
    steps:
      - task: Maven@3
        displayName: 'Maven Linter check execution'
        inputs:
          mavenPomFile: 'pom.xml'
          goals: checkstyle:check

  - job: Secret_Scan
    displayName: Secret Scan Job
    pool:
      name: Qinxiu-Local
    steps:
    - script: |
        # output=$(docker run -t trufflesecurity/trufflehog git  --branch master https://qinxiu.wang:kpmc5e6l4srpcpbnw4jchu6wufmzfrbg7cx5myudussyg3cgf5za@dev.azure.com/Patterson-Agency-Palma/Laboratorio/_git/CollegeScoreManager --only-verified)
        output=$(docker run -t -v $(Build.SourcesDirectory):/src trufflesecurity/trufflehog --json --filesystem /src)
        # echo "$output" 
        if echo "$output" | grep -q '"verified_secrets": [^0]\|"unverified_secrets": [^0]'; then
          echo "Secrets found, failing the build"
          exit 1
        else
          echo "No secrets found, proceeding with the build"
        fi
      displayName: 'Run TruffleHog Secret Scanner'
      failOnStderr: false
      
- stage: Vulnerability_scan
  dependsOn: Pre_Commit
  displayName: Vulnerability scan
  pool: Azure Pipelines
  jobs:
  - job: SAST
    displayName:  SAST
    steps:
    - task: Maven@3
      displayName: 'Maven spotbugs check execution'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: spotbugs:check
  - job: Dependency_checker
    displayName:  Dependency checker
    steps:
    - task: Maven@3
      displayName: 'Maven spotbugs check execution'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: org.owasp:dependency-check-maven:check

- stage: SCA
  dependsOn: Vulnerability_scan
  displayName: SCA
  pool: Azure Pipelines
  jobs:
  - job: SCA_job
    displayName:  cyclonedx execution
    steps:
    - task: Maven@3
      displayName: 'Maven cyclonedx check execution'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: org.cyclonedx:cyclonedx-maven-plugin:makeBom 

# - stage: Container_Image_Build
#   dependsOn: SCA
#   displayName: Container Image Build
#   pool: Azure Pipelines
#   jobs:
#   - job: Build
#     displayName:  'Image build'
#     steps:
#     - task: Docker@2
#       displayName: build
#       inputs:
#         command: build
- stage: Container_Image_Build
  dependsOn: SCA
  displayName: Container Image Build
  pool: Azure Pipelines
  jobs:
  - job: Build
    displayName:  'Image build'
    steps:
    - script: 'docker build -t patterson:$(Build.BuildId) . '
      displayName: 'Command Line Script'